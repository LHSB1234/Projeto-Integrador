{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\www\\\\4SM\\\\pj2\\\\pj2\\\\frontend\\\\src\\\\pages\\\\Blog.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Post from '../components/Post';\nimport CreatePost from '../components/CreatePost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Blog() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isCreatePostOpen, setIsCreatePostOpen] = useState(false);\n  useEffect(() => {\n    async function fetchPosts() {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/posts.php`);\n        if (Array.isArray(response.data)) {\n          setPosts(response.data);\n        } else {\n          setError('A resposta não é um array.');\n        }\n      } catch (error) {\n        setError(handleError(error));\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchPosts();\n  }, []);\n  const handleError = error => {\n    if (error.response) {\n      return `Erro: ${error.response.status} - ${error.response.data}`;\n    } else if (error.request) {\n      return 'Sem resposta do servidor. Tente novamente mais tarde.';\n    } else {\n      return `Erro: ${error.message}`;\n    }\n  };\n  const handleCreatePost = async newPost => {\n    try {\n      const formData = new FormData();\n      formData.append('title', newPost.title);\n      formData.append('description', newPost.description);\n      if (newPost.image) {\n        formData.append('image', newPost.image);\n      }\n      const response = await axios.post(`${process.env.REACT_APP_API_URL}/create_post.php`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Atualiza a lista de posts com o novo post\n      if (response.data.id) {\n        setPosts(prevPosts => [...prevPosts, response.data]);\n      } else {\n        setError('Erro ao criar o post.');\n      }\n    } catch (error) {\n      setError(handleError(error));\n    } finally {\n      setIsCreatePostOpen(false); // Fecha o modal\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this);\n  }\n  if (!posts || posts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Sem posts dispon\\xEDveis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsCreatePostOpen(true),\n      children: \"Criar Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), isCreatePostOpen && /*#__PURE__*/_jsxDEV(CreatePost, {\n      onClose: () => setIsCreatePostOpen(false),\n      onCreatePost: handleCreatePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(Blog, \"u4W0XtTKS70aCjoQQeuTzU8OgL4=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useEffect","useState","axios","Post","CreatePost","jsxDEV","_jsxDEV","Blog","_s","posts","setPosts","loading","setLoading","error","setError","isCreatePostOpen","setIsCreatePostOpen","fetchPosts","response","get","process","env","REACT_APP_API_URL","Array","isArray","data","handleError","status","request","message","handleCreatePost","newPost","formData","FormData","append","title","description","image","post","headers","id","prevPosts","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","onClose","onCreatePost","map","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/www/4SM/pj2/pj2/frontend/src/pages/Blog.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Post from '../components/Post';\r\nimport CreatePost from '../components/CreatePost';\r\n\r\nfunction Blog() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [isCreatePostOpen, setIsCreatePostOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchPosts() {\r\n            try {\r\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}/posts.php`);\r\n                if (Array.isArray(response.data)) {\r\n                    setPosts(response.data);\r\n                } else {\r\n                    setError('A resposta não é um array.');\r\n                }\r\n            } catch (error) {\r\n                setError(handleError(error));\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    const handleError = (error) => {\r\n        if (error.response) {\r\n            return `Erro: ${error.response.status} - ${error.response.data}`;\r\n        } else if (error.request) {\r\n            return 'Sem resposta do servidor. Tente novamente mais tarde.';\r\n        } else {\r\n            return `Erro: ${error.message}`;\r\n        }\r\n    };\r\n\r\n    const handleCreatePost = async (newPost) => {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('title', newPost.title);\r\n            formData.append('description', newPost.description);\r\n            if (newPost.image) {\r\n                formData.append('image', newPost.image);\r\n            }\r\n\r\n            const response = await axios.post(`${process.env.REACT_APP_API_URL}/create_post.php`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            });\r\n\r\n            // Atualiza a lista de posts com o novo post\r\n            if (response.data.id) {\r\n                setPosts((prevPosts) => [...prevPosts, response.data]);\r\n            } else {\r\n                setError('Erro ao criar o post.');\r\n            }\r\n        } catch (error) {\r\n            setError(handleError(error));\r\n        } finally {\r\n            setIsCreatePostOpen(false); // Fecha o modal\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <p>Carregando posts...</p>;\r\n    }\r\n\r\n    if (error) {\r\n        return <p>{error}</p>;\r\n    }\r\n\r\n    if (!posts || posts.length === 0) {\r\n        return <p>Sem posts disponíveis</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Blog</h2>\r\n            <button onClick={() => setIsCreatePostOpen(true)}>Criar Post</button>\r\n\r\n            {isCreatePostOpen && (\r\n                <CreatePost onClose={() => setIsCreatePostOpen(false)} onCreatePost={handleCreatePost} />\r\n            )}\r\n\r\n            <ul>\r\n                {posts.map((post) => (\r\n                    <li key={post.id}>\r\n                        <Post post={post} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Blog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}