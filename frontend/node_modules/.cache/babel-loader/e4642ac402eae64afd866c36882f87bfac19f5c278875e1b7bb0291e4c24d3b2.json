{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\www\\\\4SM\\\\pj2\\\\pj2\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Route, Routes, useNavigate, Navigate, useLocation } from 'react-router-dom';\nimport Header from './components/Header';\nimport PostPopular from './pages/PostPopular';\nimport Blog from './pages/Blog';\nimport Footer from './components/Footer';\nimport Profile from './pages/Profile';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\nimport ForgotPassword from './pages/ForgotPassword';\nimport Terms from './pages/Terms';\nimport Contact from './pages/Contact';\nimport CreatePost from './components/CreatePost';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [username, setUsername] = useState('');\n  const [isCreatePostOpen, setIsCreatePostOpen] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const handleAuthentication = user => {\n    setIsAuthenticated(true);\n    setUsername(user);\n    navigate('/blog');\n  };\n  const handleLogout = () => {\n    setIsAuthenticated(false); // Limpa o estado de autenticação\n    setUsername(''); // Limpa o nome de usuário\n    navigate('/login'); // Redireciona para a página de login\n  };\n  useEffect(() => {\n    if (window.location.pathname === '/') {\n      navigate('/register');\n    }\n  }, [navigate]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/index.php`);\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        username: username,\n        onLogout: handleLogout // Passa a função de logout para o Header\n        ,\n        setIsCreatePostOpen: setIsCreatePostOpen // Passa a função para abrir o modal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), isCreatePostOpen && /*#__PURE__*/_jsxDEV(CreatePost, {\n        onClose: () => setIsCreatePostOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this) // Exibe o modal de criação de post\n      ]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleAuthentication\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgot-password\",\n        element: /*#__PURE__*/_jsxDEV(ForgotPassword, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/terms\",\n        element: /*#__PURE__*/_jsxDEV(Terms, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        element: /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/PostPopular\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(PostPopular, {\n          username: username,\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 90\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/blog\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Blog, {\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), location.pathname === '/blog' && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"kHphc0EHC4IX0HrxFIoRhpl+5oo=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","Route","Routes","useNavigate","Navigate","useLocation","Header","PostPopular","Blog","Footer","Profile","Register","Login","ForgotPassword","Terms","Contact","CreatePost","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","posts","setPosts","isAuthenticated","setIsAuthenticated","username","setUsername","isCreatePostOpen","setIsCreatePostOpen","navigate","location","handleAuthentication","user","handleLogout","window","pathname","fetchPosts","response","get","process","env","REACT_APP_API_URL","data","error","console","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onClose","path","element","onLogin","to","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/www/4SM/pj2/pj2/frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Route, Routes, useNavigate, Navigate, useLocation } from 'react-router-dom';\nimport Header from './components/Header';\nimport PostPopular from './pages/PostPopular';\nimport Blog from './pages/Blog';\nimport Footer from './components/Footer';\nimport Profile from './pages/Profile';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\nimport ForgotPassword from './pages/ForgotPassword';\nimport Terms from './pages/Terms';\nimport Contact from './pages/Contact';\nimport CreatePost from './components/CreatePost';\nimport './styles/App.css';\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [username, setUsername] = useState('');\n  const [isCreatePostOpen, setIsCreatePostOpen] = useState(false); \n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const handleAuthentication = (user) => {\n    setIsAuthenticated(true);\n    setUsername(user);\n    navigate('/blog'); \n  };\n\n  const handleLogout = () => {\n    setIsAuthenticated(false); // Limpa o estado de autenticação\n    setUsername(''); // Limpa o nome de usuário\n    navigate('/login'); // Redireciona para a página de login\n  };\n\n  useEffect(() => {\n    if (window.location.pathname === '/') {\n      navigate('/register');\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/index.php`);\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  return (\n    <>\n      {isAuthenticated && (\n        <>\n          <Header \n            username={username} \n            onLogout={handleLogout} // Passa a função de logout para o Header\n            setIsCreatePostOpen={setIsCreatePostOpen} // Passa a função para abrir o modal\n          />\n          {isCreatePostOpen && (\n            <CreatePost onClose={() => setIsCreatePostOpen(false)} /> // Exibe o modal de criação de post\n          )}\n        </>\n      )}\n      <Routes>\n        <Route path=\"/register\" element={<Register />} />\n        <Route path=\"/login\" element={<Login onLogin={handleAuthentication} />} />\n        <Route path=\"/forgot-password\" element={<ForgotPassword />} />\n        <Route path=\"/terms\" element={<Terms />} />\n        <Route path=\"/contact\" element={<Contact />} />\n        <Route \n          path=\"/PostPopular\" \n          element={isAuthenticated ? <PostPopular username={username} posts={posts} /> : <Navigate to=\"/login\" />} \n        />\n        <Route \n          path=\"/blog\" \n          element={isAuthenticated ? <Blog posts={posts} /> : <Navigate to=\"/login\" />} \n        />\n        <Route \n          path=\"/profile\" \n          element={isAuthenticated ? <Profile /> : <Navigate to=\"/login\" />} \n        />\n        <Route path=\"*\" element={<Navigate to=\"/register\" />} />\n      </Routes>\n\n      {/* Exibe o Footer apenas se a rota atual for \"/blog\" */}\n      {location.pathname === '/blog' && <Footer />}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}