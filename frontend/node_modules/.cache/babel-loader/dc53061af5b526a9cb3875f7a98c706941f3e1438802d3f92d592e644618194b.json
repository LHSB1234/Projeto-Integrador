{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\www\\\\4SM\\\\pj2\\\\pj2\\\\frontend\\\\src\\\\pages\\\\Blog.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Post from '../components/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Blog() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchPosts() {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/posts.php`);\n        console.log('Dados retornados:', response.data); // Debug dos dados\n        if (Array.isArray(response.data)) {\n          setPosts(response.data); // Atualiza o estado com os posts recebidos\n        } else {\n          setError('Os dados retornados não são válidos.');\n        }\n      } catch (error) {\n        console.error('Erro ao buscar posts:', error);\n        setError('Erro ao buscar posts.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchPosts();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Carregando posts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  if (posts.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sem posts dispon\\xEDveis.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 36\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Blog, \"FFSFm1bVdM1s2gLh8ffGbsIvlRY=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useEffect","useState","axios","Post","jsxDEV","_jsxDEV","Blog","_s","posts","setPosts","loading","setLoading","error","setError","fetchPosts","response","get","process","env","REACT_APP_API_URL","console","log","data","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","id","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/www/4SM/pj2/pj2/frontend/src/pages/Blog.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Post from '../components/Post';\r\n\r\nfunction Blog() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchPosts() {\r\n            try {\r\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}/posts.php`);\r\n                console.log('Dados retornados:', response.data); // Debug dos dados\r\n                if (Array.isArray(response.data)) {\r\n                    setPosts(response.data); // Atualiza o estado com os posts recebidos\r\n                } else {\r\n                    setError('Os dados retornados não são válidos.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Erro ao buscar posts:', error);\r\n                setError('Erro ao buscar posts.');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    if (loading) return <p>Carregando posts...</p>;\r\n    if (error) return <p>{error}</p>;\r\n    if (posts.length === 0) return <p>Sem posts disponíveis.</p>;\r\n\r\n    return (\r\n        <div>\r\n            <h1>Blog</h1>\r\n            {posts.map((post) => (\r\n                <Post key={post.id} post={post} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Blog;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,eAAec,UAAUA,CAAA,EAAG;MACxB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,YAAY,CAAC;QAC9EC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;QACjD,IAAIC,KAAK,CAACC,OAAO,CAACT,QAAQ,CAACO,IAAI,CAAC,EAAE;UAC9Bb,QAAQ,CAACM,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;QAC7B,CAAC,MAAM;UACHT,QAAQ,CAAC,sCAAsC,CAAC;QACpD;MACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;QACZQ,OAAO,CAACR,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CC,QAAQ,CAAC,uBAAuB,CAAC;MACrC,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ;IAEAG,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAoB,QAAA,EAAG;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC9C,IAAIjB,KAAK,EAAE,oBAAOP,OAAA;IAAAoB,QAAA,EAAIb;EAAK;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAChC,IAAIrB,KAAK,CAACsB,MAAM,KAAK,CAAC,EAAE,oBAAOzB,OAAA;IAAAoB,QAAA,EAAG;EAAsB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE5D,oBACIxB,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACZrB,KAAK,CAACuB,GAAG,CAAEC,IAAI,iBACZ3B,OAAA,CAACF,IAAI;MAAe6B,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACtB,EAAA,CAtCQD,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAwCb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}