{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\www\\\\4SM\\\\pj2\\\\pj2\\\\frontend\\\\src\\\\components\\\\Post.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Pega o ID do post da URL\n  const [post, setPost] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/get_post.php`, {\n          params: {\n            id\n          },\n          withCredentials: true\n        });\n        if (response.data.error) {\n          throw new Error(response.data.error);\n        }\n        setPost(response.data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPost();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Erro: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Post n\\xE3o encontrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), post.images && post.images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-images\",\n      children: post.images.map((img, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: `Imagem ${index + 1} do post`,\n        style: {\n          width: '100%',\n          marginBottom: '10px'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Post, \"HEuJ3XdoldksiV2n+Mg4TLBg8uY=\", false, function () {\n  return [useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","Post","_s","id","post","setPost","loading","setLoading","error","setError","fetchPost","response","get","process","env","REACT_APP_API_URL","params","withCredentials","data","Error","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","title","description","images","length","className","map","img","index","src","alt","style","width","marginBottom","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/www/4SM/pj2/pj2/frontend/src/components/Post.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Post = () => {\r\n    const { id } = useParams();  // Pega o ID do post da URL\r\n    const [post, setPost] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            try {\r\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}/get_post.php`, {\r\n                    params: { id },\r\n                    withCredentials: true,\r\n                });\r\n\r\n                if (response.data.error) {\r\n                    throw new Error(response.data.error);\r\n                }\r\n\r\n                setPost(response.data);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchPost();\r\n    }, [id]);\r\n\r\n    if (loading) {\r\n        return <div>Carregando...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>Erro: {error}</div>;\r\n    }\r\n\r\n    if (!post) {\r\n        return <div>Post n√£o encontrado</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>{post.title}</h1>\r\n            <p>{post.description}</p>\r\n\r\n            {post.images && post.images.length > 0 && (\r\n                <div className=\"post-images\">\r\n                    {post.images.map((img, index) => (\r\n                        <img \r\n                            key={index} \r\n                            src={img} \r\n                            alt={`Imagem ${index + 1} do post`}\r\n                            style={{ width: '100%', marginBottom: '10px' }} \r\n                        />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}