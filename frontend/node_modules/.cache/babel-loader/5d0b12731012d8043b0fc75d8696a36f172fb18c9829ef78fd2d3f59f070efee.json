{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\www\\\\4SM\\\\pj2\\\\pj2\\\\frontend\\\\src\\\\pages\\\\Blog.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Post from '../components/Post'; // Importar o componente Post\nimport CreatePost from '../components/CreatePost'; // Importar o componente CreatePost\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Blog() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isCreatePostOpen, setIsCreatePostOpen] = useState(false); // Estado para controle do modal\n\n  useEffect(() => {\n    async function fetchPosts() {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_API_URL}/posts.php`);\n        if (Array.isArray(response.data)) {\n          setPosts(response.data);\n        } else {\n          setError('A resposta não é um array.');\n        }\n      } catch (error) {\n        if (error.response) {\n          setError(`Erro: ${error.response.status} - ${error.response.data}`);\n        } else if (error.request) {\n          setError('Sem resposta do servidor. Tente novamente mais tarde.');\n        } else {\n          setError(`Erro: ${error.message}`);\n        }\n        console.error('Erro ao buscar posts:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchPosts();\n  }, []);\n  const handleCreatePost = newPost => {\n    // Atualiza a lista de posts com o novo post\n    setPosts(prevPosts => [...prevPosts, newPost]);\n    setIsCreatePostOpen(false); // Fecha o modal\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n  if (!posts || posts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Sem posts dispon\\xEDveis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(Blog, \"u4W0XtTKS70aCjoQQeuTzU8OgL4=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","useEffect","useState","axios","Post","CreatePost","jsxDEV","_jsxDEV","Blog","_s","posts","setPosts","loading","setLoading","error","setError","isCreatePostOpen","setIsCreatePostOpen","fetchPosts","response","get","process","env","REACT_APP_API_URL","Array","isArray","data","status","request","message","console","handleCreatePost","newPost","prevPosts","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","id","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/www/4SM/pj2/pj2/frontend/src/pages/Blog.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Post from '../components/Post'; // Importar o componente Post\r\nimport CreatePost from '../components/CreatePost'; // Importar o componente CreatePost\r\n\r\nfunction Blog() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [isCreatePostOpen, setIsCreatePostOpen] = useState(false); // Estado para controle do modal\r\n\r\n    useEffect(() => {\r\n        async function fetchPosts() {\r\n            try {\r\n                const response = await axios.get(`${process.env.REACT_APP_API_URL}/posts.php`);\r\n                if (Array.isArray(response.data)) {\r\n                    setPosts(response.data);\r\n                } else {\r\n                    setError('A resposta não é um array.');\r\n                }\r\n            } catch (error) {\r\n                if (error.response) {\r\n                    setError(`Erro: ${error.response.status} - ${error.response.data}`);\r\n                } else if (error.request) {\r\n                    setError('Sem resposta do servidor. Tente novamente mais tarde.');\r\n                } else {\r\n                    setError(`Erro: ${error.message}`);\r\n                }\r\n                console.error('Erro ao buscar posts:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchPosts();\r\n    }, []);\r\n\r\n    const handleCreatePost = (newPost) => {\r\n        // Atualiza a lista de posts com o novo post\r\n        setPosts((prevPosts) => [...prevPosts, newPost]);\r\n        setIsCreatePostOpen(false); // Fecha o modal\r\n    };\r\n\r\n    if (loading) {\r\n        return <p>Carregando posts...</p>;\r\n    }\r\n\r\n    if (error) {\r\n        return <p>{error}</p>;\r\n    }\r\n\r\n    if (!posts || posts.length === 0) {\r\n        return <p>Sem posts disponíveis</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Blog</h2>\r\n            <ul>\r\n                {posts.map((post) => (\r\n                    <li key={post.id}>\r\n                        <Post post={post} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Blog;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,oBAAoB,CAAC,CAAC;AACvC,OAAOC,UAAU,MAAM,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjED,SAAS,CAAC,MAAM;IACZ,eAAeiB,UAAUA,CAAA,EAAG;MACxB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,YAAY,CAAC;QAC9E,IAAIC,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACO,IAAI,CAAC,EAAE;UAC9Bf,QAAQ,CAACQ,QAAQ,CAACO,IAAI,CAAC;QAC3B,CAAC,MAAM;UACHX,QAAQ,CAAC,4BAA4B,CAAC;QAC1C;MACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;QACZ,IAAIA,KAAK,CAACK,QAAQ,EAAE;UAChBJ,QAAQ,CAAC,SAASD,KAAK,CAACK,QAAQ,CAACQ,MAAM,MAAMb,KAAK,CAACK,QAAQ,CAACO,IAAI,EAAE,CAAC;QACvE,CAAC,MAAM,IAAIZ,KAAK,CAACc,OAAO,EAAE;UACtBb,QAAQ,CAAC,uDAAuD,CAAC;QACrE,CAAC,MAAM;UACHA,QAAQ,CAAC,SAASD,KAAK,CAACe,OAAO,EAAE,CAAC;QACtC;QACAC,OAAO,CAAChB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD,CAAC,SAAS;QACND,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ;IAEAK,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,gBAAgB,GAAIC,OAAO,IAAK;IAClC;IACArB,QAAQ,CAAEsB,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;IAChDf,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,IAAIL,OAAO,EAAE;IACT,oBAAOL,OAAA;MAAA2B,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACrC;EAEA,IAAIxB,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAA2B,QAAA,EAAIpB;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACzB;EAEA,IAAI,CAAC5B,KAAK,IAAIA,KAAK,CAAC6B,MAAM,KAAK,CAAC,EAAE;IAC9B,oBAAOhC,OAAA;MAAA2B,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACvC;EAEA,oBACI/B,OAAA;IAAA2B,QAAA,gBACI3B,OAAA;MAAA2B,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACb/B,OAAA;MAAA2B,QAAA,EACKxB,KAAK,CAAC8B,GAAG,CAAEC,IAAI,iBACZlC,OAAA;QAAA2B,QAAA,eACI3B,OAAA,CAACH,IAAI;UAACqC,IAAI,EAAEA;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADfG,IAAI,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAAC7B,EAAA,CA9DQD,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAgEb,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}